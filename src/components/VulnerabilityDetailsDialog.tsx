
import React from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogClose } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Info } from 'lucide-react';

interface Vulnerability {
  id: number;
  title: string;
  description: string;
  severity: string;
  affected: string;
  discovered: string;
  status: string;
  cvss: number;
  recommendations: string[];
  evidence: string[];
}

interface VulnerabilityDetailsDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  vuln: Vulnerability | null;
  getSeverityColor: (severity: string) => string;
  getStatusColor: (status: string) => string;
}

const VulnerabilityDetailsDialog: React.FC<VulnerabilityDetailsDialogProps> = ({
  open,
  onOpenChange,
  vuln,
  getSeverityColor,
  getStatusColor,
}) => {
  if (!vuln) return null;

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-lg w-full">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Info className="h-5 w-5 text-cyan-400" />
            {vuln.title}
          </DialogTitle>
          <DialogDescription>
            <span className="font-semibold">Severity:</span>{" "}
            <span className={getSeverityColor(vuln.severity) + " px-2 py-1 rounded-full text-xs font-bold"}>
              {vuln.severity.toUpperCase()}
            </span>
          </DialogDescription>
        </DialogHeader>
        <div className="space-y-3 mt-2">
          <div>
            <span className="font-semibold text-gray-300">Description:</span>
            <p className="text-gray-300 text-sm mt-1">{vuln.description}</p>
          </div>
          <div>
            <span className="font-semibold text-gray-300">Affected SME:</span>
            <span className="text-sm ml-1 text-purple-200">{vuln.affected}</span>
          </div>
          <div>
            <span className="font-semibold text-gray-300">Discovered:</span>
            <span className="text-sm ml-1 text-sky-200">{vuln.discovered}</span>
          </div>
          <div>
            <span className="font-semibold text-gray-300">Status:</span>
            <span className={`ml-2 text-xs px-2 py-1 rounded-full font-medium ${getStatusColor(vuln.status)}`}>{vuln.status}</span>
          </div>
          <div>
            <span className="font-semibold text-gray-300">CVSS Score:</span>
            <span className="ml-2 text-white">{vuln.cvss}</span>
          </div>
          <div>
            <span className="font-semibold text-cyan-400">Recommendations:</span>
            <ul className="list-disc pl-5 mt-1 text-cyan-200 text-sm space-y-1">
              {vuln.recommendations && vuln.recommendations.map((rec, i) => (
                <li key={i}>{rec}</li>
              ))}
            </ul>
          </div>
          <div>
            <span className="font-semibold text-yellow-400">Evidence:</span>
            <ul className="list-disc pl-5 mt-1 text-yellow-100 text-sm space-y-1">
              {vuln.evidence && vuln.evidence.map((ev, i) => (
                <li key={i}>{ev}</li>
              ))}
            </ul>
          </div>
        </div>
        <DialogClose asChild>
          <Button className="mt-5 w-full" variant="secondary">
            Close
          </Button>
        </DialogClose>
      </DialogContent>
    </Dialog>
  );
};

export default VulnerabilityDetailsDialog;
