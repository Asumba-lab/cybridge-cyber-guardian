
import React, { useState } from 'react';
import { Button } from "@/components/ui/button";
import VulnerabilityDetailsDialog from './VulnerabilityDetailsDialog';
import { AlertTriangle, Clock, CheckCircle, Eye } from 'lucide-react';

interface Vulnerability {
  id: number;
  title: string;
  description: string;
  severity: string;
  affected: string;
  discovered: string;
  status: string;
  cvss: number;
  recommendations: string[];
  evidence: string[];
}

interface VulnerabilityListItemProps {
  vuln: Vulnerability;
  getSeverityColor: (severity: string) => string;
  getStatusColor: (status: string) => string;
  getStatusIcon: (status: string) => React.ReactNode;
}

const VulnerabilityListItem: React.FC<VulnerabilityListItemProps> = ({
  vuln,
  getSeverityColor,
  getStatusColor,
  getStatusIcon,
}) => {
  const [open, setOpen] = useState(false);
  return (
    <div className="bg-slate-900/50 p-4 rounded-lg border border-white/10 hover:border-white/20 transition-all duration-200">
      <div className="flex items-start justify-between mb-3 flex-wrap gap-2">
        <div className="flex-1 min-w-[180px]">
          <div className="flex items-center space-x-3 mb-2">
            <h4 className="text-white font-semibold">{vuln.title}</h4>
            <span className={`px-2 py-1 rounded-full text-xs font-bold ${getSeverityColor(vuln.severity)}`}>
              {vuln.severity.toUpperCase()}
            </span>
            <span className="text-gray-400 text-sm">CVSS: {vuln.cvss}</span>
          </div>
          <p className="text-gray-400 text-sm mb-2">{vuln.description}</p>
          <div className="flex items-center space-x-4 text-xs text-gray-500">
            <span>Affected: {vuln.affected}</span>
            <span>Discovered: {vuln.discovered}</span>
          </div>
        </div>
        <div className="flex flex-col gap-2 items-end">
          <span className={`inline-flex items-center space-x-1 px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(vuln.status)}`}>
            {getStatusIcon(vuln.status)}
            <span className="capitalize">{vuln.status.replace('-', ' ')}</span>
          </span>
          <Button
            className="text-cyan-400 hover:text-cyan-300 text-sm font-medium bg-transparent px-0 py-0 h-auto"
            variant="link"
            onClick={() => setOpen(true)}
            aria-label={`View details about ${vuln.title}`}
          >
            View Details
          </Button>
          <VulnerabilityDetailsDialog
            open={open}
            onOpenChange={setOpen}
            vuln={vuln}
            getSeverityColor={getSeverityColor}
            getStatusColor={getStatusColor}
          />
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityListItem;
